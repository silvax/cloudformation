{
  "Description" : "Virtual Private Cloud Stack ",
  "Parameters" : {
    "VPCCIDR" : {
      "Description" : "CIDR Notation for VPC Network address for the entire region",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "172.18.0.0/21",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x. Our default is to use ./21 for the VPC itself"
    },
    "SubnetAZone": {
      "Description" : "Availability Zone for First subnet on the region",
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "MinLength": "1",
      "MaxLength": "15",
      "Default" : "us-east-1b"
    },
    "SubnetBZone": {
      "Description" : "Availability Zone for Second subnet on the region",
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "MinLength": "1",
      "MaxLength": "15",
      "Default" : "us-east-1a"
    },
    "SubnetCZone": {
      "Description" : "Availability Zone for Third subnet on the region",
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "MinLength": "1",
      "MaxLength": "15",
      "Default" : "us-east-1e"
    },
    "SubnetACIDR" : {
      "Description" : "CIDR Notation for the first subnet Subnet A in the region",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "172.18.0.0/23",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x. Our default is to use /23 for subnets"
    },
    "SubnetBCIDR" : {
      "Description" : "CIDR Notation for the second subnet Subnet A in the region. /23",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "172.18.2.0/23",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x. Our default is to use /23 for subnets"
    },
    "SubnetCCIDR" : {
      "Description" : "CIDR Notation for the third subnet Subnet C in the region. /23",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "172.18.4.0/23",
      "AllowedPattern" : "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x. Our default is to use /20 for subnets"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": { "Ref" : "VPCCIDR"},
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true"
      }
    },
    "subneta": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Ref" : "SubnetACIDR"},
        "AvailabilityZone": { "Ref" : "SubnetAZone"},
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "subnetb": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Ref" : "SubnetBCIDR"},
         "AvailabilityZone": { "Ref" : "SubnetBZone"},
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "subnetc": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": { "Ref" : "SubnetCCIDR"},
         "AvailabilityZone": { "Ref" : "SubnetCZone"},
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "MyInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
      }
    },
    "MyDHCPOpttions": {
      "Type": "AWS::EC2::DHCPOptions",
      "Properties": {
        "DomainName" : "ec2.internal",
        "DomainNameServers": [
          "AmazonProvidedDNS"
        ]
      }
    },
    "MyACL": {
      "Type": "AWS::EC2::NetworkAcl",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "MyRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "egressACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Egress": true,
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "MyACL"
        }
      }
    },
    "ingressACL": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "Properties": {
        "CidrBlock": "0.0.0.0/0",
        "Protocol": "-1",
        "RuleAction": "allow",
        "RuleNumber": "100",
        "NetworkAclId": {
          "Ref": "MyACL"
        }
      }
    },
    "subnetacl1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MyACL"
        },
        "SubnetId": {
          "Ref": "subneta"
        }
      }
    },
    "subnetacl2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MyACL"
        },
        "SubnetId": {
          "Ref": "subnetb"
        }
      }
    },
    "subnetacl3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties": {
        "NetworkAclId": {
          "Ref": "MyACL"
        },
        "SubnetId": {
          "Ref": "subnetc"
        }
      }
    },
    "gateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref" : "VPC" },
        "InternetGatewayId": {
          "Ref": "MyInternetGateway"
        }
      }
    },
    "subnetroutea": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyRouteTable"
        },
        "SubnetId": {
          "Ref": "subneta"
        }
      }
    },
    "subnetrouteb": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyRouteTable"
        },
        "SubnetId": {
          "Ref": "subnetb"
        }
      }
    },
    "subnetroutec": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "MyRouteTable"
        },
        "SubnetId": {
          "Ref": "subnetc"
        }
      }
    },
    "route1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "MyRouteTable"
        },
        "GatewayId": {
          "Ref": "MyInternetGateway"
        }
      },
      "DependsOn": "gateway"
    },

    "dchpassoc1": {
      "Type": "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "DhcpOptionsId": {
          "Ref": "MyDHCPOpttions"
        }
      }
    }
  }
}
